// data_structures
#include <algo/data_structures/dsu.hpp>
// flows
#include <algo/flows/kuhn.hpp>
// graphs
#include <algo/graphs/constants.hpp>
#include <algo/graphs/scc.hpp>
// maths
#include <algo/maths/algebra/fft.hpp>
#include <algo/maths/algebra/gcd.hpp>
#include <algo/maths/algebra/least_prime_factors.hpp>
#include <algo/maths/algebra/modular_inverse.hpp>
#include <algo/maths/algebra/two_sat.hpp>
#include <algo/maths/constants.hpp>
// strings
#include <algo/strings/aho_corasick.hpp>
#include <algo/strings/prefix_function.hpp>
#include <algo/strings/suffix_array.hpp>
#include <algo/strings/suffix_tree.hpp>
#include <algo/strings/z_function.hpp>
// trees
#include <algo/trees/fenwick.hpp>
#include <algo/trees/hld.hpp>
#include <algo/trees/lazy_segment_tree.hpp>
#include <algo/trees/lca.hpp>
#include <algo/trees/linkcut.hpp>
#include <algo/trees/segment_tree/details/node.hpp>
#include <algo/trees/segment_tree/details/propagators/eager_propagator.hpp>
#include <algo/trees/segment_tree/details/propagators/lazy_propagator.hpp>
#include <algo/trees/segment_tree/details/segment_tree.hpp>
#include <algo/trees/segment_tree/details/trees/dynamic_tree.hpp>
#include <algo/trees/segment_tree/details/trees/static_tree.hpp>
#include <algo/trees/segment_tree/operations/add.hpp>
#include <algo/trees/segment_tree/operations/operation.hpp>
#include <algo/trees/segment_tree/operations/set.hpp>
#include <algo/trees/segment_tree/operations/set_add.hpp>
#include <algo/trees/segment_tree/statistics/base.hpp>
#include <algo/trees/segment_tree/statistics/minimum.hpp>
#include <algo/trees/segment_tree/statistics/sum.hpp>
#include <algo/trees/segment_tree/trees.hpp>
// utils
#include <algo/utils/debug.hpp>
#include <algo/utils/generators.hpp>
#include <algo/utils/meta.hpp>
#include <algo/utils/preprocessor.hpp>
#include <algo/utils/random.hpp>
#include <algo/utils/to_string/declarations/all.hpp>
#include <algo/utils/to_string/declarations/fundamentals.hpp>
#include <algo/utils/to_string/declarations/has_to_string.hpp>
#include <algo/utils/to_string/declarations/iterable.hpp>
#include <algo/utils/to_string/declarations/std/array_or_vector.hpp>
#include <algo/utils/to_string/declarations/std/bitset.hpp>
#include <algo/utils/to_string/declarations/std/pair.hpp>
#include <algo/utils/to_string/declarations/std/string.hpp>
#include <algo/utils/to_string/declarations/std/vector_bool.hpp>
#include <algo/utils/to_string/declarations/to_stringable.hpp>
#include <algo/utils/to_string/definitions/all.hpp>
#include <algo/utils/to_string/definitions/fundamentals.hpp>
#include <algo/utils/to_string/definitions/has_to_string.hpp>
#include <algo/utils/to_string/definitions/iterable.hpp>
#include <algo/utils/to_string/definitions/std/array_or_vector.hpp>
#include <algo/utils/to_string/definitions/std/bitset.hpp>
#include <algo/utils/to_string/definitions/std/pair.hpp>
#include <algo/utils/to_string/definitions/std/string.hpp>
#include <algo/utils/to_string/definitions/std/vector_bool.hpp>
#include <algo/utils/to_string/definitions/to_stringable.hpp>
#include <algo/utils/to_string/to_string.hpp>
#include <algo/utils/traits/std/containers.hpp>
#include <algo/utils/traits/std/dimension.hpp>
#include <algo/utils/traits/traits.hpp>
#include <algo/utils/types/128_t.hpp>
#include <algo/utils/types/modular.hpp>
#include <algo/utils/types/fundamentals.hpp>

int main() {
}
